generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  role          String     @default("user")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  accounts      Account[]
  sessions      Session[]
  Project       Project[]
  TodoItem      TodoItem[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Project {
  id        String   @id @default(cuid())
  name      String
  ownerId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User?    @relation(fields: [ownerId], references: [email], onDelete: SetNull)
  columns Column[]
}

model Column {
  id        String   @id @default(cuid())
  name      String
  color     String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  todos   TodoItem[]
}

model TodoItem {
  id        String   @id @default(cuid())
  content   String
  startAt   DateTime
  endAt     DateTime
  columnId  String
  ownerId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  column Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  owner  User?  @relation(fields: [ownerId], references: [email], onDelete: SetNull)
}
